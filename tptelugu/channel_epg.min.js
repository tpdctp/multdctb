const url=new URL(window.location.href),params=new URLSearchParams(url.search),id=params.get("id");let channels={},channel={},epg=[],container=document.getElementById("container");async function initApp(){document.getElementById("spinner").style.display="block";try{await checkAndUpdateData(),await changeData(),generateEpg()}catch(t){console.error("Initialization error:",t),document.getElementById("error").textContent="Failed to load data. Please try again later."}}async function checkAndUpdateData(){try{const t=await fetch("https://db.jarviz.site/jarviz-tv/version.txt");if(!t.ok)throw new Error("Failed to fetch version");const e=await t.text();if(localStorage.getItem("cachedVersion")!==e){localStorage.clear();const t=await openDatabase();await fetchChannels(),await fetchEPG(t),localStorage.setItem("cachedVersion",e)}else{channels=JSON.parse(localStorage.getItem("cachedChannels"))||[];const t=await openDatabase();epg=await fetchEPGData(t)||{}}}catch(t){throw console.error("Failed to check and update data:",t),t}}async function fetchChannels(){try{const t=await fetch("https://db.jarviz.site/jarviz-tv/channels.json");if(!t.ok)throw new Error("Failed to fetch channels");const e=await t.json();channels=Object.values(e),localStorage.setItem("cachedChannels",JSON.stringify(channels))}catch(t){throw console.error("Failed to fetch channels:",t),t}}async function changeData(){channel=channels.find((t=>t.id===id)),epg=epg[`ts${id}`],epg=epg.map((t=>({...t,start:convertToIST(t.start),stop:convertToIST(t.stop)})))}async function fetchEPG(t){try{const e=await fetch("https://db.jarviz.site/jarviz-tv/epg.json");if(!e.ok)throw new Error("Failed to fetch EPG");epg=await e.json(),await storeEPGData(t,epg)}catch(t){throw console.error("Failed to fetch EPG:",t),t}}function convertToIST(t){const e=t.slice(0,14),a=parseInt(e.substring(0,4),10),n=parseInt(e.substring(4,6),10)-1,r=parseInt(e.substring(6,8),10),s=parseInt(e.substring(8,10),10),i=parseInt(e.substring(10,12),10),o=parseInt(e.substring(12,14),10),c=new Date(Date.UTC(a,n,r,s,i,o)),l=new Date(c.getTime()+198e5),g=t=>String(t).padStart(2,"0");return l.getUTCFullYear()+g(l.getUTCMonth()+1)+g(l.getUTCDate())+g(l.getUTCHours())+g(l.getUTCMinutes())+g(l.getUTCSeconds())+" +0530"}function convertToUTC(t){const e=t.slice(0,14),a=parseInt(e.substring(0,4),10),n=parseInt(e.substring(4,6),10)-1,r=parseInt(e.substring(6,8),10),s=parseInt(e.substring(8,10),10),i=parseInt(e.substring(10,12),10),o=parseInt(e.substring(12,14),10),c=new Date(Date.UTC(a,n,r,s,i,o)),l=new Date(c.getTime()-198e5),g=t=>String(t).padStart(2,"0");return l.getUTCFullYear()+g(l.getUTCMonth()+1)+g(l.getUTCDate())+g(l.getUTCHours())+g(l.getUTCMinutes())+g(l.getUTCSeconds())+" +0000"}function adjustTiming(t,e){const a=t.slice(0,14),n=parseInt(a.slice(0,4),10),r=parseInt(a.slice(4,6),10)-1,s=parseInt(a.slice(6,8),10),i=parseInt(a.slice(8,10),10),o=parseInt(a.slice(10,12),10),c=parseInt(a.slice(12,14),10),l=new Date(Date.UTC(n,r,s,i,o,c));l.setMinutes(l.getMinutes()+e);const g=t=>String(t).padStart(2,"0");return l.getUTCFullYear()+g(l.getUTCMonth()+1)+g(l.getUTCDate())+"T"+g(l.getUTCHours())+g(l.getUTCMinutes())+g(l.getUTCSeconds())}function getdatetime(t){const e=t.slice(0,14),a=parseInt(e.slice(0,4),10),n=parseInt(e.slice(4,6),10)-1,r=parseInt(e.slice(6,8),10),s=parseInt(e.slice(8,10),10),i=parseInt(e.slice(10,12),10),o=parseInt(e.slice(12,14),10),c=new Date(Date.UTC(a,n,r,s,i,o)),l=c.getUTCHours()%12||12,g=c.getUTCHours()>=12?"PM":"AM",p=l+":"+String(c.getUTCMinutes()).padStart(2,"0")+" "+g;return{date:String(c.getUTCDate()).padStart(2,"0")+"-"+String(c.getUTCMonth()+1).padStart(2,"0")+"-"+c.getUTCFullYear(),time:p}}function generateEpg(){let t="",e=`<div class="channel-header">\n    <img src="https://tv.jarviz.site/assets/img/logo_128/ts${channel.id}.webp" alt="${channel.name}">\n    <h1>${channel.name}</h1>\n</div>`;const a=convertToIST((new Date).toISOString().replace(/[-:T.]/g,"").slice(0,14)+" +0000"),n=epg.filter((t=>t.stop<a));n.sort(((t,e)=>{const a=new Date(t.start).getTime();return new Date(e.start).getTime()-a})),n.forEach((a=>{const n=a.start.slice(0,8);n!==t&&(""!==t&&(e+="</ul>"),t=n,e+=`<div class="epg-date">${t.slice(0,4)}-${t.slice(4,6)}-${t.slice(6,8)}</div><ul class="epg-list">`);const r=getdatetime(a.start),s=getdatetime(a.stop);e+=`\n            <li>\n                <div class="epg-details">\n                    <div class="epg-title">${a.title}</div>\n                    <div class="epg-time">${r.time} - ${s.time}</div>\n                </div>\n                <button class="watch-btn" onclick='watchProgram("${a.start}", "${a.stop}", "${a.title}")'>Watch</button>\n            </li>`})),""!==e&&(e+="</ul>"),container.innerHTML=e}function watchProgram(t,e,a){t=convertToUTC(t),e=convertToUTC(e),window.location.href=`past_player.html?id=${channel.id}&start=${adjustTiming(t,-5)}&stop=${adjustTiming(e,5)}&title=${a}`}function openDatabase(){return new Promise(((t,e)=>{const a=indexedDB.open("EPGDatabase",1);a.onerror=t=>e(t.target.error),a.onsuccess=e=>t(e.target.result),a.onupgradeneeded=t=>{t.target.result.createObjectStore("epg",{keyPath:"id"})}}))}function storeEPGData(t,e){return new Promise(((a,n)=>{const r=t.transaction("epg","readwrite");r.objectStore("epg").put({id:"epgData",data:e}),r.oncomplete=()=>a(),r.onerror=t=>n(t.target.error)}))}function fetchEPGData(t){return new Promise(((e,a)=>{const n=t.transaction("epg","readonly").objectStore("epg").get("epgData");n.onsuccess=t=>e(t.target.result?t.target.result.data:null),n.onerror=t=>a(t.target.error)}))}document.addEventListener("DOMContentLoaded",(()=>{initApp()}));s