const url=new URL(window.location.href),params=new URLSearchParams(url.search),id=params.get("id"),start=params.get("start"),end=params.get("stop"),program=params.get("title");let channels={},channel={},epg={},container=document.getElementById("container");function formatDate(e){const t=e.slice(0,4),a=e.slice(4,6);return`${e.slice(6,8)}-${a}-${t}`}function convertDateFormat(e){return e.slice(0,4)+e.slice(4,6)+e.slice(6,8)+"T"+e.slice(8,10)+e.slice(10,12)+e.slice(12,14)}function addDays(e,t){var a=e.slice(0,4),n=e.slice(4,6),r=e.slice(6,8),o=e.slice(9,11),i=e.slice(11,13),c=e.slice(13,15),s=new Date(a,n-1,r,o,i,c),l=new Date(s);return l.setDate(l.getDate()+t),`${l.getFullYear()}${("0"+(l.getMonth()+1)).slice(-2)}${("0"+l.getDate()).slice(-2)}T${("0"+l.getHours()).slice(-2)}${("0"+l.getMinutes()).slice(-2)}${("0"+l.getSeconds()).slice(-2)}`}async function initApp(){document.getElementById("spinner").style.display="block";try{await checkAndUpdateData(),await changeData(),play()}catch(e){console.error("Initialization error:",e),document.getElementById("error").textContent="Failed to load data. Please try again later."}}async function checkAndUpdateData(){try{const e=await fetch("https://db.jarviz.site/jarviz-tv/version.txt");if(!e.ok)throw new Error("Failed to fetch version");const t=await e.text();if(localStorage.getItem("cachedVersion")!==t){localStorage.clear();const e=await openDatabase();await fetchChannels(),await fetchEPG(e),localStorage.setItem("cachedVersion",t)}else{channels=JSON.parse(localStorage.getItem("cachedChannels"))||[];const e=await openDatabase();epg=await fetchEPGData(e)||{}}}catch(e){throw console.error("Failed to check and update data:",e),e}}async function fetchChannels(){try{const e=await fetch("https://db.jarviz.site/jarviz-tv/channels.json");if(!e.ok)throw new Error("Failed to fetch channels");const t=await e.json();channels=Object.values(t),localStorage.setItem("cachedChannels",JSON.stringify(channels))}catch(e){throw console.error("Failed to fetch channels:",e),e}}async function changeData(){channel=channels.find((e=>e.id===id)),epg=epg[`ts${id}`]}async function fetchEPG(e){try{const t=await fetch("https://db.jarviz.site/jarviz-tv/epg.json");if(!t.ok)throw new Error("Failed to fetch EPG");epg=await t.json(),await storeEPGData(e,epg)}catch(e){throw console.error("Failed to fetch EPG:",e),e}}function play(){html=`<div id="jwplayerDiv" class="jwplayerDiv" style="radius: 15px;"></div>\n    <div class="now-playing" style="margin-top: 20px;display: flex;align-items: center;background-color: #f9f9f9;padding: 10px;border-radius: 10px;box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);">\n    <h2 id="now" style="margin: 0;font-size: 1.2rem;font-weight: 500;color: #333;">${program}&nbsp;-&nbsp;${formatDate(convertDateFormat(start))}</h2>\n    </div>\n    <div class="now-playing channel-info" style="margin-top: 20px;/*display: flex;*//*align-items: center;*/background-color: #f9f9f9;padding: 10px;border-radius: 10px;box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);display: flex;align-items: center;"><img id="logo" src="https://tv.jarviz.site/assets/img/logo_128/ts${channel.id}.webp" alt="Channel Logo" style="height: 60px;width: 60px;border-radius: 50%;margin-right: 20px;border: 3px solid #4e54c8;" />\n    <h2 id="channel" style="margin: 0;font-size: 1.2rem;font-weight: 500;color: #333;">${channel.name}</h2>\n    </div>`,container.innerHTML=html;const e=`${channel.url}?begin=${start}&end=${end}`;jwplayer("jwplayerDiv").setup({file:e,title:channel.name+" - "+program,autostart:!0,stretching:"exactfit",width:"100%",aspectRatio:"16:9",type:"dash",drm:{clearkey:{keyId:channel.keyId,key:channel.key}},logo:{file:"https://tv.jarviz.site/assets/img/logo.png",hide:"false",position:"bottom-left",margin:2,width:"auto",height:"25px"}}).on("error",(function(){console.error("An error occurred while setting up the player.")}))}function openDatabase(){return new Promise(((e,t)=>{const a=indexedDB.open("EPGDatabase",1);a.onerror=e=>t(e.target.error),a.onsuccess=t=>e(t.target.result),a.onupgradeneeded=e=>{e.target.result.createObjectStore("epg",{keyPath:"id"})}}))}function storeEPGData(e,t){return new Promise(((a,n)=>{const r=e.transaction("epg","readwrite");r.objectStore("epg").put({id:"epgData",data:t}),r.oncomplete=()=>a(),r.onerror=e=>n(e.target.error)}))}function fetchEPGData(e){return new Promise(((t,a)=>{const n=e.transaction("epg","readonly").objectStore("epg").get("epgData");n.onsuccess=e=>t(e.target.result?e.target.result.data:null),n.onerror=e=>a(e.target.error)}))}document.addEventListener("DOMContentLoaded",(()=>{initApp()}));